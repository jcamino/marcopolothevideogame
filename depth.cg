//Cg

void vshader(float4 vtx_position : POSITION,
             out float4 l_position : POSITION,
             out float2 l_texcoord : TEXCOORD0,
             uniform float4 texpad_color,
             uniform float4x4 mat_modelproj)
{
    l_position = mul(mat_modelproj, vtx_position);
    l_texcoord = (vtx_position.xz * texpad_color.xy) + texpad_color.xy;
}

float linearZ(uniform sampler2D tex, float2 uv)
{
    float near = 1.0;
    float far = 200.0;
    float z = tex2D(tex, uv);
    return (2.0 * near) / (far + near - z * (far - near));
}

void fshader(float2 l_texcoord : TEXCOORD0,
             uniform sampler2D k_color : TEXUNIT0,
             uniform sampler2D k_blur : TEXUNIT1,
             uniform sampler2D k_depth : TEXUNIT2,
             out float4 o_color : COLOR)
{
    float z_max = 0.3;
    float z_min = 0.01;
    float z = linearZ(k_depth, l_texcoord);

    float4 color = z > z_max ? tex2D(k_blur, l_texcoord) : z < z_min ? tex2D(k_blur, l_texcoord) : tex2D(k_color, l_texcoord);
    o_color = color;
}
